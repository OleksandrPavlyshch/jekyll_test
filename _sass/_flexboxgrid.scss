//
// -- Start editing -- //
//

// Set the number of columns you want to use on your layout.
$grid-columns: 12;
// Set the gutter between columns.
$gutter-width: 16px;
// Set a margin for the container sides.
$outer-margin: 24px;
//Set wraper width
$wraper-width: $desktop+px;

// Create or remove breakpoints for your project
// Syntax:
// name SIZErem,
$breakpoints:
	sm $mobile+px 16px,
	md $tablet+px 16px,
	lg $desktop+px 16px,
	xl $hdpi+px 16px;


//
// -- Stop editing -- //
//

$gutter-compensation: ($gutter-width * 0.5) * -1;

.wrapper {
	box-sizing: border-box;
	max-width: $wraper-width;
	margin: 0 auto;
}

.container-fluid {
	margin-right: auto;
	margin-left: auto;
	padding-right: $outer-margin;
	padding-left: $outer-margin;
}

.row {
	box-sizing: border-box;
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
	margin-right: $gutter-compensation;
	margin-left: $gutter-compensation;
}

.row.reverse {
	flex-direction: row-reverse;
}

.col.reverse {
	flex-direction: column-reverse;
}

$name: xs;
[class*="col-#{$name}"] {
	box-sizing: border-box;
	flex: 0 0 auto;
	padding-right: $gutter-compensation * -1;
	padding-left: $gutter-compensation  * -1;
}
@for $i from 1 through $grid-columns {
	.col-#{$name}-#{$i} {
		flex-basis: 100% / $grid-columns * $i;
		max-width: 100% / $grid-columns * $i;
	}
}
@for $i from 1 through $grid-columns {
	.col-#{$name}-offset-#{$i} {
		margin-left: 100% / $grid-columns * $i
	}
}
.col-#{$name} {
	flex-grow: 1;
	flex-basis: 0;
	max-width: 100%;
}
.start-#{$name} {
	justify-content: flex-start;
	text-align: start;
}

.center-#{$name} {
	justify-content: center;
	text-align: center;
}

.end-#{$name} {
	justify-content: flex-end;
	text-align: end;
}

.top-#{$name} {
	align-items: flex-start;
}

.middle-#{$name} {
	align-items: center;
}

.bottom-#{$name} {
	align-items: flex-end;
}

.around-#{$name} {
	justify-content: space-around;
}

.between-#{$name} {
	justify-content: space-between;
}

.first-#{$name} {
	order: -1;
}

.last-#{$name} {
	order: 1;
}


@each $breakpoint in $breakpoints {
	$name: nth($breakpoint, 1);
	$size: nth($breakpoint, 2);
	$column-padding: nth($breakpoint, 3);
	$breakpoin-gutter-compensation: ($column-padding * 0.5) * -1;
	@media only screen and (min-width: $size) {
		.row {
			margin-right: $breakpoin-gutter-compensation;
			margin-left: $breakpoin-gutter-compensation;
		}
		[class*="col-#{$name}"] {
			box-sizing: border-box;
			flex: 0 0 auto;
			padding-right: $breakpoin-gutter-compensation * -1;
			padding-left: $breakpoin-gutter-compensation  * -1;
		}
		@for $i from 1 through $grid-columns {
			.col-#{$name}-#{$i} {
				flex-basis: 100% / $grid-columns * $i;
				max-width: 100% / $grid-columns * $i;
			}
		}
		@for $i from 1 through $grid-columns {
			.col-#{$name}-offset-#{$i} {
				margin-left: 100% / $grid-columns * $i
			}
		}
		.col-#{$name} {
			flex-grow: 1;
			flex-basis: 0;
			max-width: 100%;
		}
		.start-#{$name} {
			justify-content: flex-start;
			text-align: start;
		}

		.center-#{$name} {
			justify-content: center;
			text-align: center;
		}

		.end-#{$name} {
			justify-content: flex-end;
			text-align: end;
		}

		.top-#{$name} {
			align-items: flex-start;
		}

		.middle-#{$name} {
			align-items: center;
		}

		.bottom-#{$name} {
			align-items: flex-end;
		}

		.around-#{$name} {
			justify-content: space-around;
		}

		.between-#{$name} {
			justify-content: space-between;
		}

		.first-#{$name} {
			order: -1;
		}
		.last-#{$name} {
			order: 1;
		}
	}
}
